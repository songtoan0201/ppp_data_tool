from sqlalchemy import Column, String, Integer, Float, DateTime
from .database import Base


class PPPRecordDB(Base):
    __tablename__ = "ppp_loans"

    loannumber = Column(String, primary_key=True)
    dateapproved = Column(DateTime, comment="Loan Funded Date")
    sbaofficecode = Column(String, comment="SBA Origination Office Code")
    processingmethod = Column(String, comment="Loan Delivery Method (PPP for first draw; PPS for second draw)")
    borrowername = Column(String, index =True, comment="Borrower Name") # Indexed for faster search
    borroweraddress = Column(String, comment="Borrower Street Address")
    borrowercity = Column(String, index= True, comment="Borrower City") # Indexed for faster search
    borrowerstate = Column(String, index= True, comment="Borrower State") # Indexed for faster search
    borrowerzip = Column(String, comment="Borrower Zip Code")
    loanstatusdate = Column(DateTime, comment="Loan Status Date - Loan Status Date is  blank when the loan is disbursed but not Paid In Full or Charged Off")
    loanstatus = Column(String, comment="Loan Status Description - Loan Status is replaced by 'Exemption 4' when the loan is disbursed but not Paid in Full or Charged Off")
    term = Column(Integer, comment="Loan Maturity in Months")
    sbaguarantypercentage = Column(Float, comment="SBA Guaranty Percentage")
    initialapprovalamount = Column(Float, comment="Loan Approval Amount(at origination)")
    currentapprovalamount = Column(Float, comment="Loan Approval Amount (current)")
    undisbursedamount = Column(Float, comment="Undisbursed Amount")
    franchisename = Column(String, comment="Franchise Name")
    servicinglenderlocationid = Column(Integer, comment="Lender Location ID (unique identifier)")
    servicinglendername = Column(String, comment="Servicing Lender Name")
    servicinglenderaddress = Column(String, comment="Servicing Lender Street Address")
    servicinglendercity = Column(String, comment="Servicing Lender City")
    servicinglenderstate = Column(String, comment="Servicing Lender State")
    servicinglenderzip = Column(String, comment="Servicing Lender Zip Code")
    ruralurbanindicator = Column(String, comment="Rural or Urban Indicator (R/U)")
    hubzoneindicator = Column(String, comment="Hubzone Indicator (Y/N)")
    lmiindicator = Column(String, comment="LMI Indicator (Y/N)")
    businessagedescription = Column(String, comment="Business Age Description")
    projectcity = Column(String, comment="Project City")
    projectcountyname = Column(String, comment="Project County Name")
    projectstate = Column(String, comment="Project State")
    projectzip = Column(String, comment="Project Zip Code")
    cd = Column(String, comment="Project Congressional District")
    jobsreported = Column(Integer, comment="Number of Employees")
    naicscode = Column(String, comment="NAICS 6 digit code")
    race = Column(String, comment="Borrower Race Description")
    ethnicity = Column(String, comment="Borrower Ethnicity Description")
    utilities_proceed = Column(String, comment="Note: Proceed data is lender reported at origination.  On the PPP application the proceeds fields were check boxes.")
    payroll_proceed = Column(String)
    mortgage_interest_proceed = Column(String)
    rent_proceed = Column(String)
    refinance_eidl_proceed = Column(Float)
    health_care_proceed = Column(String)
    debt_interest_proceed = Column(String)
    businesstype = Column(String, comment="Business Type Description")
    originatinglenderlocationid = Column(Integer, comment="Originating Lender ID (unique identifier)")
    originatinglender = Column(String, comment="Originating Lender Name")
    originatinglendercity = Column(String, comment="Originating Lender City")
    originatinglenderstate = Column(String, comment="Originating Lender State")
    gender = Column(String, comment="Gender Indicator")
    veteran = Column(String, comment="Veteran Indicator")
    nonprofit = Column(String, comment="'Yes' if Business Type = Non-Profit Organization or Non-Profit Childcare Center or 501(c) Non Profit")
    forgivenessamount = Column(Float, comment="Forgiveness Amount")
    forgivenessdate = Column(DateTime, comment="Forgiveness Paid Date")